'use strict'
let data, data2, data3;

let main = () => {
	data = data.split('\n');
	// data = data2.split('\n');
	// data = data3.split('\n');

	let min_x = Infinity;
	let max_x = -Infinity;
	let min_y = Infinity;
	let max_y = -Infinity;
	let elfs = [];
	for (let y = 0; y < data.length; y++)
	{
		for (let x = 0; x < data[y].length; x++)
		{
			if (data[y][x] === '#')
			{
				if (x < min_x) min_x = x;
				if (x > max_x) max_x = x;
				if (y < min_y) min_y = y;
				if (y > max_y) max_y = y;
				// [xp, yp, state, dx, dy]
				elfs.push([x, y, 0, 0, 0])
			}
		}
	}

	let rounds = 10;
	while(rounds)
	{

		console.log()
		console.log("round:", rounds)
		console.log()

		// console.log(data)

		min_x = Infinity;
		max_x = -Infinity;
		min_y = Infinity;
		max_y = -Infinity;
	
		for (let i = 0; i < elfs.length; i++)
		{
			let x = elfs[i][0];
			let y = elfs[i][1];
			if (x < min_x) min_x = x;
			if (x > max_x) max_x = x;
			if (y < min_y) min_y = y;
			if (y > max_y) max_y = y;
		}

		// console.log(elfs, min_x, max_x, min_y, max_y)


		let start_x = 0
		let end_x = max_x - min_x+2
		let start_y = 0
		let end_y = max_y - min_y+2

		// console.log(start_x, end_x, start_y, end_y)

		let map = [];
		for (let y = 0; y <= end_y; y++)
		{
			map[y] = [];
			for (let x = 0; x <= end_x; x++)
			{
				map[y][x] = '.';
			}
		}
		let map2 = map.map(el=>el.map(el2=>el2));
		let map3 = map.map(el=>el.map(el2=>el2));

		// for (let i = 0; i < map.length; i++)
		// {
		// console.log(map[i].join(''))
		// }

		for (let i = 0; i < elfs.length; i++)
		{
			let x = elfs[i][0]-min_x+1;
			let y = elfs[i][1]-min_y+1;
			map[y][x] = '#';
		}


		for (let i = 0; i < map.length; i++)
		{
			console.log(map[i].join(''))
		}

		console.log(elfs)

		for (let i = 0; i < elfs.length; i++)
		{
			let x = elfs[i][0]-min_x+1;
			let y = elfs[i][1]-min_y+1;
			

			if (map[y-1][x] === "." &&
				map[y+1][x] === "." &&
				map[y][x-1] === "." && 
				map[y+1][x-1] === "." &&
				map[y-1][x-1] === "." &&
				map[y][x+1] === "." && 
				map[y+1][x+1] === "." &&
				map[y-1][x+1] === ".")
			{
				elfs[i][3] = 0;
				elfs[i][4] = 0;
			}
			else
			{
				for (let p = 0; p < 4; p++)
				{
					let dir = (elfs[i][2] + p) % 4;

					if (elfs[i][3] === 0 && elfs[i][4] === 0)
					{
						if (dir === 0) // N
						{
							if (map[y-1][x] === "." && map[y-1][x+1] === "." && map[y-1][x-1] === ".")
							{
								elfs[i][3] = 0;
								elfs[i][4] = -1;
							}

						}
						else if (dir === 1) // S
						{
							if (map[y+1][x] === "." && map[y+1][x+1] === "." && map[y+1][x-1] === ".")
							{
								elfs[i][3] = 0;
								elfs[i][4] = 1;
							}
						}
						else if (dir === 2) // W
						{
							if (map[y][x-1] === "." && map[y+1][x-1] === "." && map[y-1][x-1] === ".")
							{
								elfs[i][3] = -1;
								elfs[i][4] = 0;
							}
						}
						else if (dir === 3) // E
						{
							if (map[y][x+1] === "." && map[y+1][x+1] === "." && map[y-1][x+1] === ".")
							{
								console.log("elf", i, ": E")
								elfs[i][3] = 1;
								elfs[i][4] = 0;
							}
						}
					}
				}

			}
		}



		for (let i = 0; i < elfs.length; i++)
		{
			elfs[i][2] += 1;
			elfs[i][2] %= 4;
		}

		console.log(elfs)

		for (let i = 0; i < elfs.length; i++)
		{
			let x = elfs[i][0]-min_x+1;
			let y = elfs[i][1]-min_y+1;
			let dx = elfs[i][3];
			let dy = elfs[i][4];
			let x2 = x + dx;
			let y2 = y + dy;
			if (map2[y2][x2] === '.') {
				map2[y2][x2] = i;
			}
			else {
				let ix = map2[y2][x2];
				// map2[y2][x2] = i; //to update or not to update
				elfs[ix][3] = 0
				elfs[ix][4] = 0
				elfs[i][3] = 0
				elfs[i][4] = 0
			}
		}

		console.log(elfs)

		console.log();
		for (let i = 0; i < map.length; i++)
		{
			console.log(map2[i].join(''))
		}

		for (let i = 0; i < elfs.length; i++)
		{
			let x = elfs[i][0]-min_x+1;
			let y = elfs[i][1]-min_y+1;
			let dx = elfs[i][3];
			let dy = elfs[i][4];
			let x2 = x + dx;
			let y2 = y + dy;
			map3[y2][x2] = '#';
			elfs[i][0] += elfs[i][3];
			elfs[i][1] += elfs[i][4];
			elfs[i][3] = 0;
			elfs[i][4] = 0;
		}

		console.log();
		for (let i = 0; i < map.length; i++)
		{
			console.log(map3[i].join(''))
		}

		// data = map3;
		data = map3.map(el=>el.join(''));
		rounds--;
	}


	min_x = Infinity;
	max_x = -Infinity;
	min_y = Infinity;
	max_y = -Infinity;
	for (let i = 0; i < elfs.length; i++)
	{
		let x = elfs[i][0];
		let y = elfs[i][1];
		if (x < min_x) min_x = x;
		if (x > max_x) max_x = x;
		if (y < min_y) min_y = y;
		if (y > max_y) max_y = y;
	}
	let sq = (max_x-min_x+1)*(max_y-min_y+1)-elfs.length;
	console.log(sq)

// 6480 too high
// 6400 too high

}

data2 = `.....
..##.
..#..
.....
..##.
.....`
data3 = `..............
..............
.......#......
.....###.#....
...#...#.#....
....#...##....
...#.###......
...##.#.##....
....#..#......
..............
..............
..............`
data = `##.....#..#..##....#..##.#.##.###.#...#.####..###..#.#.##.#....#.#.##.#
.##...#.###.#...###.##....#######..##..#..#.####..#####.....#..#.#....#
.#..#.##..#.######...##...##...##...#.#.#.#..####.#..###....###..##..##
..#.#...#.#.#...####..#.####....##..###.#.#.#..#.....#....#..###.##.#..
#.##.######..#.###.####.##.###.....####.#######.#...##..#.#.#...##..###
.#..####.####.##.#####..#.#.#...##.#.###.####...#.#..#...##.#..####.##.
.#..##.######.###..##.#.#.##.#.##..###.#...#..##.########...###..#.####
.#..##.........#.#...####.#...#..#.#.##.#.#..###......######.##..######
#...#.#...#.###.##..#.#.#..#.#.#.#..##.#.###....#....#.....#.##.#...###
##.##...#..##.#...#..####..#..#.#.....#...####.##.....#####.#.#..#..#..
....####....#.#......####..#.##.........###....##.##.#...##..#..#.###.#
#..#.#.......#.####.#..#......###.#.....#...##.###....###...#...#....#.
#....###.#..###....#..#####...###..####..#..#...##..####..#####..##.#..
#.####.####..###....##..##.##.....##..#.#.....##..#...#...####.#.##.##.
.....#.###..#.##.#.....###....######.#..##.###.##.#.##.##....#.#...##.#
#....###...#..##.##.###.#.#..#.#..#.##.###...##...#.##.##.#####.###...#
###..####.##.#....##...##.###.#.##..######.#####.###.#.##.#..#..##.#..#
..#.##..#.####..#....#..##..#..#..#..##..#..#..##...#.###.#.###...#.#..
########...#..###.#...#.#...##...##.##.#...#...#.#..#.##.##.#..#...#.#.
..#.....###..#.###.##.#.##..##..#####..#.####.###.#..#...#.###...#####.
###..##....#.##.##.#.#....###..###.#....##..###.....#.#.....#...#..###.
#.#.#...#.##.##.#####.#.###..#..###.#.####..#.#........#.#...#.##..####
.##.#.#.#..##.##.#####.###.....#.#....#..####.##....##.##..###..#.###..
.........#.#.#.##.#.#####.#.###.#.####.#..#.####.##.#..#...#.....###.##
...#.#.#.##..##..####.#####.#..##...###..###.#..#..#..###...#.#..#.####
##....#..##..##..##.#..#...#.##..###..####.#....##.#.#..#....#####.#.#.
.##.##.###........##...#.##....#.#..#....###.#.#####.#..#.##.#.#..##.#.
#.#....#.##.#..##..#..#..#######..#####....#...#.##.#.##.#...#..##.#.##
###....##..#.###.##..##.#.#.###.#..#.#####.#.#....###..#.#..#######.###
.##.#........#####.#.#..##.#..###...#.##.#.#.##...#......##..###..#..#.
#..#..#..#......#.#...#..#.#.##........##..#.#.#.#.###.....#.###.#...##
.####.#.##.............#...##.#.#########.###.#####.....#..##..#...####
.......#####.###..#...#..#...#.###.#.##.##...#...####.##.##.#...###.##.
..###.####....#..#...######.###..##.....#.#.#.##.......#.##...#.#...##.
..##.###..##.#..#.#..#.#.#.###.#..##.##...#.#.#........#..##.##.#..#.#.
.####.....#...##..####.#.##..##........#.#.####..##.....###..#####....#
#####...#.....###.#.####.#.#..#.#..#.####.#.###.#...#######.###..#.##.#
.#.##.###..#.#.##.#..#.#.##....##.......#..##...##..#..#.#####..###..#.
.#.##..#.##.##.###.##.#..#...##.####...........#.##..##...#.#.####..#..
.#.#.#......##.#.#..##..#.##......#...#..#.#.##..####.##..#.....#.##.#.
..#.##...#.##.#.#..#.##..##...#...#.#...##..#.####.##..#.##.#.#..#..##.
.#....#.....##.####.#.##..#....#....#..#.##...##...##.##.##...##.###.##
##..###...####..#...###..###..#.##.#...##.##...#.#.#.#...#...#.#####.#.
#.##....#.###...#.#.#.....###..##.#.##..##.#.#.#.#...#.#.###..#..#..##.
..#..###.#.#.#..###..##...###.....##.#.##..#.######..##..#.#.##..#..###
..##....####.###.##........#...#.#.#.#.##..#.#....#....###..###..####..
..###.....#.##.##.#.#..#.#.####.#.#.#..##..#..##.#...#..#..###.....###.
##..#....#.##....#.#.#..#..#.#..##....#....#.#.##..#..####..##..##.#.#.
...###.#..##.###.####..####..##.##.#..#.####..#.#.#.#####.#.###..#.##.#
##.######.###.###.##..#.#....#.######.#..#.#.#.#..#...#..##.####...#...
###.##..#..##.#..#.#..#.....###...#.##.##...#####.#.###.#...#.##..#....
###.###.##.##.#.#.###.#..###..##..#....#...#.####.#.##...#####.###..#.#
#.....#.###.###.##.#..#....#.....#.##..#.###.####.###.#...###.#....####
.##.#.#...#.....#####....##.##.#.#...###.###.#.#...##.#####...#####..##
..#...######...###.###.##.#..####.#........##.#....#.#.#...#..#...##.#.
.###.#......#.##.###..###.##.##...##..##.#..#.....###.#....##.##.....#.
...###.##.....##...########.######.....##.##..#.#.#.#..##.####.########
##...##....#####.......#..#.###.#####....#...#..#...#.#..##.#.#....#.##
.##.#...##.##..####..###.###....##...#......#.....##.#.#......#.....##.
...#..........#.#...#..#..#.##...#.#...####.....###..##.###.#..###...##
.###..##....#..#.#.##.##.#..#####..###.##......#..#....####.##.#..###.#
#.#.#.#..######.#.##.####.....#.#.#.##..###.##...####........#########.
#.##.####.....###.######......##.##.##.##.....#..#.##..##.###.#.##.#..#
..#####.###.#######..#....#...###...##.##...#..###.####...#.##.....#..#
#.##..##.##..#.##..##.#..##.#..##...###....#.#.#.##.###...###.#..######
###....###.##.##....##..##.##.#.#...#.#.#..###...#..#.#.#..#...#.##....
##.#..#.#.####..#.#.##.#.#.#.#.#####.#.#..###.##.###.#.##....#.##..#.#.
##.#.#.#.###.#.####.##..##.##..#####......##.....#..###.#.#..#####..##.
.#####...###.#....##.##.##..#..#...#.###.#....#...##....##..##..##.##..
#..#..##..####..##..##..#.###....#.#..####.####..##.##.###...##.......#
..######.#.#.####.##........##...####.#.##.##..##..##.......######..##.`;

main();